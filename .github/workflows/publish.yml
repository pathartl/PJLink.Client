name: Build and Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_FILE: 'PJLink.Client.sln'
  PROJECT_PATH: 'PJLink.Client/PJLink.Client.csproj'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
    
    - name: Build
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore
    
    - name: Test
      run: dotnet test ${{ env.SOLUTION_FILE }} --configuration Release --no-build --verbosity normal

  publish:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Set version from tag
      run: echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    
    - name: Pack
      run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release -p:PackageVersion=${{ env.PACKAGE_VERSION }} --no-build --output nupkgs
    
    - name: Push to NuGet
      run: dotnet nuget push nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json 